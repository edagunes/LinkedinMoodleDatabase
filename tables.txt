CREATE TABLE USERS(
	USER_ID CHAR(9) NOT NULL PRIMARY KEY,
	ADDRESS VARCHAR(30) NOT NULL ,
	E_MAIL VARCHAR(50) NOT NULL ,
	USERNAME VARCHAR(20) NOT NULL,
	UNIQUE(E_MAIL,USERNAME)
);

CREATE TABLE MEMBERS (
	SSN CHAR(9) PRIMARY KEY,
	BIRTH_DATE DATE NOT NULL,
	SEX CHAR NOT NULL,
	FNAME VARCHAR ( 50 ) NOT NULL ,
	LNAME VARCHAR ( 50 ) NOT NULL ,
	USER_ID CHAR(9) NOT NULL ,
	MEM_TYPE VARCHAR ( 10 ) NOT NULL ,
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE COMPANY(
	COMP_ID CHAR(9) PRIMARY KEY,
	EMP_COUNT INT ,
	COMP_NAME VARCHAR ( 50 ) NOT NULL,
	SECTOR VARCHAR ( 50 ) NOT NULL, 
	USER_ID CHAR(9) NOT NULL ,
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
	UNIQUE (COMP_NAME)
);

CREATE TABLE UNIVERSITY(
	UNI_ID CHAR(5) PRIMARY KEY,
	UNI_NAME VARCHAR ( 50 ) NOT NULL,
	LOCATION_NAME VARCHAR ( 50 ) NOT NULL,
	USER_ID CHAR(9) NOT NULL ,
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
	UNIQUE(UNI_NAME)
);

CREATE TABLE JOB(
	JOB_ID CHAR(5) PRIMARY KEY,
	COMP_ID CHAR(9) NOT NULL,
	POSITION_NAME VARCHAR ( 50 ) NOT NULL,
	WORKING_TYPE VARCHAR ( 50 ) NOT NULL,
	ADVERT_DATE	DATE NOT NULL,
	JOB_LOCATION VARCHAR ( 50 ) NOT NULL,
	FOREIGN KEY(COMP_ID) REFERENCES COMPANY (COMP_ID)
);

CREATE TABLE DEPARTMENT(
	DEPT_ID CHAR(5) PRIMARY KEY,
	DEPT_NAME VARCHAR ( 20 ) NOT NULL,
	UNI_ID CHAR(5)  NOT NULL,
	FOREIGN KEY(UNI_ID) REFERENCES UNIVERSITY (UNI_ID)
);

CREATE TABLE INSTRUCTOR(
	SSN CHAR(9) PRIMARY KEY,
	INS_TYPE VARCHAR ( 20 ) NOT NULL,
	DEPT_ID CHAR(5),
	FOREIGN KEY(DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID)
);

CREATE TABLE STUDENT(
	SSN CHAR(9) PRIMARY KEY,
	CPGA FLOAT NOT NULL , 
	START_YEAR INT NOT NULL ,
	DEPT_ID CHAR(5),
	FOREIGN KEY(DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID)
);

CREATE TABLE EMPLOYEE(
	SSN CHAR(9) PRIMARY KEY,
	GRADUATED_UNI VARCHAR ( 20 ) NOT NULL
);

CREATE TABLE COURSE(
	COURSE_ID CHAR(5) PRIMARY KEY,
	COURSE_NAME VARCHAR ( 20 ) NOT NULL,
	STUDENT_COUNT INT ,
	TERM VARCHAR ( 10 ) NOT NULL,
	DEPT_ID CHAR(5) NOT NULL,
	INS_SSN CHAR ( 9 ) NOT NULL,
	FOREIGN KEY(DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID),
	FOREIGN KEY(INS_SSN) REFERENCES INSTRUCTOR (SSN)
);

CREATE TABLE GROUP_(
	GROUP_ID CHAR(6) PRIMARY KEY,
	GROUP_NAME VARCHAR ( 20 ) NOT NULL,
	MEM_COUNT INT,
	OWNER_ID CHAR(9) NOT NULL ,
	FOREIGN KEY(OWNER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE POST(
	POST_ID CHAR(6) PRIMARY KEY,
	POST_DATE DATE NOT NULL,
	LIKE_COUNT INT DEFAULT 0,
	GROUP_ID  CHAR(6),
	USER_ID CHAR(9) NOT NULL ,
	FOREIGN KEY(GROUP_ID) REFERENCES GROUP_(GROUP_ID),
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID) 
);

CREATE TABLE ASSIGNMENT_(
	ASSIGN_ID CHAR(6) NOT NULL ,
	COURSE_ID CHAR(6) NOT NULL ,
	ASSIGN_NAME VARCHAR (10) NOT NULL,
	INS_SSN CHAR(9) NOT NULL,
	PRIMARY KEY(ASSIGN_ID,COURSE_ID),
	FOREIGN KEY(COURSE_ID) REFERENCES COURSE(COURSE_ID),
	FOREIGN KEY(INS_SSN) REFERENCES INSTRUCTOR(SSN)
);

CREATE TABLE SKILL(
	SKILL_ID CHAR(3) PRIMARY KEY  ,
	SKILL_NAME VARCHAR (20) NOT NULL
);
CREATE TABLE MESSAGE(
	SENDER_SSN CHAR(9) NOT NULL,
	RECEIVER_SSN CHAR(9) NOT NULL,
	CONTEXT VARCHAR (100) NOT NULL,
	MESSAGE_DATE DATE NOT NULL,
	PRIMARY KEY(SENDER_SSN,RECEIVER_SSN),
	FOREIGN KEY(SENDER_SSN) REFERENCES MEMBERS (SSN),
	FOREIGN KEY(RECEIVER_SSN) REFERENCES MEMBERS (SSN)
);
CREATE TABLE VIEW_PROFILE(
	VIEWERS_SSN CHAR(9) NOT NULL,
	VIEWING_SSN CHAR(9) NOT NULL,
	PRIMARY KEY(VIEWERS_SSN,VIEWING_SSN),
	FOREIGN KEY(VIEWERS_SSN) REFERENCES MEMBERS (SSN),
	FOREIGN KEY(VIEWING_SSN) REFERENCES MEMBERS (SSN)
);

CREATE TABLE CONNECT_(
	FOLLOWING_SSN CHAR(9) NOT NULL,
	FOLLOWERS_SSN CHAR(9) NOT NULL,
	PRIMARY KEY(FOLLOWING_SSN,FOLLOWERS_SSN),
	FOREIGN KEY(FOLLOWING_SSN) REFERENCES MEMBERS(SSN),
	FOREIGN KEY(FOLLOWERS_SSN) REFERENCES MEMBERS(SSN)
);

CREATE TABLE USER_GROUP(
	USER_ID CHAR(9) NOT NULL,
	GROUP_ID CHAR(6) NOT NULL,
	ISMANAGER BOOLEAN NOT NULL ,
	PRIMARY KEY(USER_ID,GROUP_ID),
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
	FOREIGN KEY(GROUP_ID) REFERENCES GROUP_ (GROUP_ID)
);

CREATE TABLE COMMENT_(
	USER_ID CHAR(9) NOT NULL,
	POST_ID CHAR(6) NOT NULL,
	CONTENTS VARCHAR (50) NOT NULL,
	PRIMARY KEY (USER_ID,POST_ID),
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
	FOREIGN KEY(POST_ID) REFERENCES POST(POST_ID)
);

CREATE TABLE LIKE_(
	USER_ID CHAR(9) NOT NULL,
	POST_ID CHAR(6) NOT NULL,
	PRIMARY KEY (USER_ID,POST_ID),
	FOREIGN KEY(USER_ID) REFERENCES USERS(USER_ID),
	FOREIGN KEY(POST_ID) REFERENCES POST(POST_ID)
);

CREATE TABLE MEMBER_LANGUAGE(
	MEMBER_SSN CHAR(9) NOT NULL,
	LANGUAGES VARCHAR (15) NOT NULL,
	PRIMARY KEY(MEMBER_SSN,LANGUAGES),
	FOREIGN KEY(MEMBER_SSN) REFERENCES MEMBERS (SSN)
);

CREATE TABLE MEMBER_ENDORSE_SKILL(
	MEMBER_SSN CHAR(9) NOT NULL,
	SKILL_ID CHAR(3) NOT NULL,
	ENDORSED_BY CHAR(9) NOT NULL,
	PRIMARY KEY (MEMBER_SSN,SKILL_ID,ENDORSED_BY),
	FOREIGN KEY(MEMBER_SSN) REFERENCES MEMBERS (SSN),
	FOREIGN KEY(SKILL_ID) REFERENCES SKILL(SKILL_ID)
);
CREATE TABLE STUDENT_ASSIGNMENT(
	STUDENT_SSN CHAR(9) NOT NULL,
	ASSIGN_ID CHAR(6) NOT NULL ,
	COURSE_ID CHAR(6) NOT NULL ,
	GRADE INT NOT NULL ,
	PRIMARY KEY(STUDENT_SSN,ASSIGN_ID,COURSE_ID),
	FOREIGN KEY(ASSIGN_ID,COURSE_ID) REFERENCES ASSIGNMENT_(ASSIGN_ID,COURSE_ID),
	FOREIGN KEY(STUDENT_SSN) REFERENCES STUDENT(SSN)
);

CREATE TABLE STUDENT_COURSE(
	STUDENT_SSN CHAR(9) NOT NULL,
	COURSE_ID CHAR(6) NOT NULL ,
	PRIMARY KEY(STUDENT_SSN,COURSE_ID),
	FOREIGN KEY(STUDENT_SSN) REFERENCES STUDENT(SSN),
	FOREIGN KEY(COURSE_ID) REFERENCES COURSE(COURSE_ID)
);

CREATE TABLE STUDENT_JOB(
	STUDENT_SSN CHAR(9) NOT NULL,
	JOB_ID CHAR(6) NOT NULL ,
	COMP_ID CHAR(6) NOT NULL ,
	PRIMARY KEY(STUDENT_SSN,JOB_ID,COMP_ID),
	FOREIGN KEY(STUDENT_SSN) REFERENCES STUDENT(SSN),
	FOREIGN KEY(JOB_ID) REFERENCES JOB(JOB_ID),
	FOREIGN KEY(COMP_ID) REFERENCES COMPANY (COMP_ID )
);

CREATE TABLE EMPLOYEE_JOB(
	EMPLOYEE_SSN CHAR(9) NOT NULL,
	JOB_ID CHAR(6) NOT NULL ,
	COMP_ID CHAR(6) NOT NULL ,
	ISACCEPT BOOLEAN NOT NULL ,
	PRIMARY KEY(EMPLOYEE_SSN ,JOB_ID,COMP_ID),
	FOREIGN KEY(EMPLOYEE_SSN) REFERENCES EMPLOYEE (SSN),
	FOREIGN KEY(JOB_ID) REFERENCES JOB(JOB_ID),
	FOREIGN KEY(COMP_ID) REFERENCES COMPANY (COMP_ID)
);

CREATE TABLE HAS_EXP_ON(
	EMPLOYEE_SSN CHAR(9) NOT NULL,
	COMP_ID CHAR(6) NOT NULL ,
	START_DATE DATE NOT NULL ,
	END_DATE DATE NOT NULL ,
	ROLES VARCHAR(10) NOT NULL ,
	PRIMARY KEY(EMPLOYEE_SSN,COMP_ID),
	FOREIGN KEY(EMPLOYEE_SSN) REFERENCES EMPLOYEE (SSN),
	FOREIGN KEY(COMP_ID) REFERENCES COMPANY (COMP_ID)
);

ALTER TABLE HAS_EXP_ON ALTER COLUMN  ROLES TYPE VARCHAR(50);

